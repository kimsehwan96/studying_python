리스트와 튜플.

리스트는 대괄호 [ ]를 사용하여 여러 데이터를 저장 할 수 있는 자료형

순서가 있고, 인덱스를 이용하여 데이터에 접근할 수 있다.

리스트는 mutable하다.

score = [1,2,3,4,5]

print(score)

[1,2,3,4,5]

print(score[0])
1
print(score[4])
5

리스트 관련 중요 메소드

append(x) -> 데이터 x를 리스트 끝에 추가한다.

score.append(6)

print(score)

[1,2,3,4,5,6]

clera() ->리스트를 비운다
copy() -> 리스트 복사
count(x) -> 데이터 x의 개수를 알아낸다
index(x) -> 데이터 x의 위치를 알아낸다(인덱스를 알려준다)
pop() -> 리스트의 지정한 값 하나를 읽어내고 삭제한다.
pop(i) -> 리스트에서 인덱스 i에 있는 데이터를 반환하고 삭제한다.
remove(x) -> 리스트에서 데이터 x를 삭제한다. x가 여러개 있으면 맨 처음 x를 삭제한다.
reverse() -> 리스트의 순서를 역순으로 바꾼다.
sort() -> 리스트를 정렬한다
sort(reverse=True) -> 내림차순으로 정렬한다.
insert(i,x) -> 인덱스 i에 데이터 x를 삽입한다
lists=[3,5,6,2]

list.sort()

lists

[2,3,5,6]


**** c = lists.sort() 는 틀린 문법이다. 왜?
.메소드 는 객체에 대해 어떤 일을 처리하도록 하는 코드, 즉 lists라는 객채에 어떤일을 한 것이다.

이를 바로 변수에 넣으려고하면 오류가 생긴다. 따라서 c라는 변수에 lists가 sort된것을 넣고 싶다면?

lists.sort()

c = lists

이런식으로 들어가야 한다.


**** 튜플 ******

리스트처럼 여러 데이터를 저장 할 수 있는 자료형이다.

인덱싱, 슬라이싱 이용 할 수 있다.

+,*,in,not in, len() 사용 할 수 있다.

[] 대신 () 사용.

리스트와 차이점 -> 튜플은 immutable 하다.

인덱스 개념은 동일한데.

예를틀어 T = (1,3,5,7,9)라고 하자.

인덱스 0 은 1, 1은 3 ....... 이렇게 저장되어있는데

T[2] = 10 이렇게 인덱스 내 값을 바꾸는 것은 불가능 하다.

**** 튜플은 여러 변수에 값을 동시에 할당 할 수 있도록 한다 !

a,b,c = 1,2,3 -> a=1 , b=2, c=3

(a,b,c) =(1,2,3) -> a=1, b=2, c=3

튜플은 함수에서 유용하게 사용된다고 한다. 튜플은 immutable 하기때문에
프로그램 수행동안 변경하지 않아야 하는 데이터는 튜플로 저장하도록 한다.



for 구문을 이용한 반복문

for x in [데이터 집합] (range()함수, 문자열, 리스트, 튜플)




***8 군집자료의 형변환 이거 중요 할 것 같아요


str(A) => A를 문자열로 변환한다.
list(A) => A를 리스트로 변환한다.
tuple(A) => A를 튜플로 변환한다.
set(A) => A를 집합으로 변환한다.
dict(A) => A를 사전으로 변환한다.


함수를 공부하기 전에 함수와 메소드의 차이를 더욱 더 공부를 하도록 하자.

또한 군집자료형의 데이터 형 변환은 중요한 내용 일 것 같으니
확실히 짚고 넘어가자. 3일차 공부 끝
